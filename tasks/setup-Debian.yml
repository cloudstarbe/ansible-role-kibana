---
- set_fact: "kibana_major_version={{ es_version.split('.')[0] }}.x"
  when:
      - es_major_version is undefined

- name: Ensure dependencies are installed.
  apt:
    name:
      - apt-transport-https
      - gnupg2
    state: present

- name: Add Elasticsearch apt key.
  apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present

- name: Add Kibana repository.
  apt_repository:
    repo: 'deb https://artifacts.elastic.co/packages/{{ kibana_major_version }}/apt stable main'
    state: present
    update_cache: true

- name: Debian - Get installed kibana version
  command: dpkg-query --showformat='${Version}' --show {{ kibana_package }}
  register: installed_kibana_version
  failed_when: False
  changed_when: False
  check_mode: no

- name: Debian - unhold elasticsearch version
  become: yes
  dpkg_selections:
    name: "{{ es_package_name }}"
    selection: "install"
  when: not es_version_lock or (installed_kibana_version.stdout and installed_kibana_version.stdout != kibana_version)

- name: Debian - Ensure kibana is installed
  become: yes
  apt:
    name: '{{ kibana_package }}{% if kibana_version is defined and kibana_version != "" %}={{ kibana_version }}{% endif %}'
    state: present
  notify: restart kibana

- name: Debian - hold kibana version
  become: yes
  dpkg_selections:
    name: "{{ kibana_package }}"
    selection: "hold"
  when: kibana_version_lock